addition
    {
        java.util.List::List
        java.lang.Object::Object
        java.util.ArrayList::ArrayList
        java.io.BufferedWriter::BufferedWriter
    }

typename Person : open
    {
        constant firstName String
        variable secondName String
        variable age Int

        instance Person(firstName String, secondName String, age Int);

        instance Person(firstName String, secondName String, age Int, organizations String...)
            {
                $(firstName, secondName, age)
                $org::organizations.addAll(organizations)
                $org::organizations.sort()
            }

        function getInfo()
            {
                println('Name: #{$name}\nSecond name: #{$secondName}\nFriends:')
                $com::friends.foreach
                    {
                        if (it.isBest) {
                            println(it.person.firstName)
                        }
                    }
                $org::getInfo()
            }

        function equals(o Object) : override
            = o is Person && $firstName == o.firstName && $secondName == o.secondName && $age == o.age

        division com
            {
                typename Friend : inner : private
                    {
                        constant person Person
                        variable isBest Boolean

                        instance Friend(person Person, isBest Boolean);
                    }

                constant friends List<Friend> = ArrayList<>()

                function sayAll(message String) : open
                    {
                        println(message)
                    }

                function sayTo(other Person, message String)
                    {
                        println("#{other.firstName}, #message")
                    }

                function addFriend(person Person, isBest Boolean)
                    {
                        val friend = Friend(person, isBest)
                        $friends.add(friend)
                    }
            }

        division org
            {
                constant organizations List<String> : private = ArrayList<>()

                function getInfo()
                    {
                        println('Organizations:')
                        $organizations.foreach { println(it) }
                    }

                function writeToFile(fileName String)
                    {
                        constant bufferedWriter = BufferedWriter(FileWriter(fileName))
                        cycle (organization in $organizations) {
                            bufferedWriter.write(organization)
                            bufferedWriter.write('\n')
                        }
                        writer.close()
                    }
            }
    }